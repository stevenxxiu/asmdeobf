
- Update extract.py to perform abstract interpretation and to adapt to an instruction mapping to a cfg
- run main.py to see what is still broken, and simplify cfg which has same blocks of instructions
- Allow manually specifying functions to be inlined. This is necessary in order to prevent duplicate code blocks from being run.
- To better locate where blocks are and what we have missing do coverage in js (draw as canvas)
- Present cfg in javascript, the result would look something like ida's analysis and generate a graph, with a list of functions on left panel and accesses on top
- The user should deal with self-modifying code, in order to do this, add an instruction change hook, that whenever this instruction is encountered, it will be changed to user-specified esil
